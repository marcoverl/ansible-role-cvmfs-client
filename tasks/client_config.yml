---
- name: Base setup
  command: 'cvmfs_config setup'

- name: Build default.local file
  template:
    src: default.local.j2
    dest: /etc/cvmfs/default.local

- name: Build repository config.d file
  template:
    src: repository.conf.j2
    dest: '/etc/cvmfs/config.d/{{ repository_name }}.conf'
  when: not cvmfs_preconfigured|bool

- name: Copy preconfigured config.d file
  copy:
    src: '{{ public_key_src_path }}/{{ repository_name }}.conf'
    dest: '/etc/cvmfs/config.d/{{ repository_name }}.conf'
    remote_src: true
  when: cvmfs_preconfigured|bool

- name: Copy public key
  copy:
    src: 'repository_key.pub'
    dest: '{{cvmfs_public_key_path}}/{{cvmfs_public_key}}'
  when: not cvmfs_preconfigured|bool
 
- name: Copy public key for preconfigured repository
  copy:
    src: '{{ public_key_src_path }}/{{ repository_name }}.pub'
    dest: '/etc/cvmfs/keys/{{ repository_name }}.pub'
    remote_src: true
  when: cvmfs_preconfigured|bool

- name: '[VM] Restart autofs'
  service:
    name: autofs
    state: restarted
  when: ansible_virtualization_type != "docker"

#________________________________
# Check configuration

- name: '[VM] Check config'
  command: 'cvmfs_config chksetup'
  register: chksetup_output
  when: ansible_virtualization_type != "docker"

- fail:
    msg: 'cvmfs_config chksetup fail!'
  when:
    - chksetup_output.stdout is defined
    - chksetup_output.rc != 0

#________________________________
# Mount cvmfs

- name: '[VM] mount cvmfs using cvmfs_config probe'
  include: probe.yml
  when:
  - cvmfs_mountpoint == '/cvmfs'
  - ansible_virtualization_type != "docker"

- name: '[VM] mount cvmfs manually'
  include: mount.yml
  when:
    - cvmfs_mountpoint != '/cvmfs'
    - ansible_virtualization_type != "docker"

- name: '[Docker] mount cvmfs'
  include: mount.yml
  when: ansible_virtualization_type == "docker"
